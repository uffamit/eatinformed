// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Extracts ingredient lists and nutritional information from an image of a food label using OCR.
 *
 * - extractIngredients - A function that handles the ingredient extraction process.
 * - ExtractIngredientsInput - The input type for the extractIngredients function.
 * - ExtractIngredientsOutput - The return type for the extractIngredients function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExtractIngredientsInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a food label, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type ExtractIngredientsInput = z.infer<typeof ExtractIngredientsInputSchema>;

const ExtractIngredientsOutputSchema = z.object({
  ingredients: z.string().describe('The list of ingredients extracted from the food label.'),
  nutritionInformation: z
    .string()
 .describe('The nutritional information extracted from the food label.'),
  status: z.enum(['success', 'no_data', 'unreadable']).describe('The status of the extraction: "success", "no_data" if no information was found, or "unreadable" if the information was present but could not be read.'),
});
export type ExtractIngredientsOutput = z.infer<typeof ExtractIngredientsOutputSchema>;

export async function extractIngredients(input: ExtractIngredientsInput): Promise<ExtractIngredientsOutput> {
  return extractIngredientsFlow(input);
}

const extractIngredientsPrompt = ai.definePrompt({
  name: 'extractIngredientsPrompt',
  input: {schema: ExtractIngredientsInputSchema},
  output: {schema: ExtractIngredientsOutputSchema},
  prompt: `You are an AI assistant specializing in extracting ingredient lists and nutritional information from food labels.

  Analyze the image of the food label and extract the ingredient list and nutritional information.

  Photo: {{media url=photoDataUri}}

  If you cannot find any ingredient or nutritional information in the image, set the 'status' field to 'no_data'.
  If the information appears to be present but is too blurry or difficult to read, set the 'status' field to 'unreadable'.
  If you successfully extract the information, set the 'status' field to 'success'.

  Present the extracted ingredient list and nutritional information clearly and concisely.
  `,
});

const extractIngredientsFlow = ai.defineFlow(
  {
    name: 'extractIngredientsFlow',
    inputSchema: ExtractIngredientsInputSchema,
    outputSchema: ExtractIngredientsOutputSchema,
  },
  async input => {
    const {output} = await extractIngredientsPrompt(input);
    return output!;
  }
);
